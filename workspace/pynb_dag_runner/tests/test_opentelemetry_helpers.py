from pynb_dag_runner.opentelemetry_helpers import get_span_id


def test_tracing_get_span_id():
    # Example span generated by Ray when calling a remote method on an Actor
    test_span = {
        "name": "ActorA.foo ray.remote_worker",
        "context": {
            "trace_id": "<hex-trace-id>",
            "span_id": "<hex-span-id>",
            "trace_state": "[]",
        },
        "kind": "SpanKind.CONSUMER",
        "parent_id": "<hex-parent-id>",
        "start_time": "2021-10-10T10:25:35.173367Z",
        "end_time": "2021-10-10T10:25:46.173381Z",
        "status": {"status_code": "UNSET"},
        "attributes": {
            "ray.remote": "actor",
            "ray.actor_class": "ActorA",
            "ray.actor_method": "foo",
            "ray.function": "ActorA.foo",
            "ray.pid": "1234",
            "ray.job_id": "01000000",
            "ray.node_id": "<hex-ray-node-id>",
            "ray.actor_id": "<hex-ray-actor-id>",
            "ray.worker_id": "<hex-ray-worker-id>",
        },
        "events": [],
        "links": [],
        "resource": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.5.0",
            "service.name": "unknown_service",
        },
    }

    assert get_span_id(test_span) == "<hex-span-id>"
