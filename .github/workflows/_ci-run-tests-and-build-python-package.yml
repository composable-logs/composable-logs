name: "ci: Run tests and build Python package wheel file"

on:
  workflow_call:
    inputs:
      python-package-release-target:
        required: true
        type: string
        # "ci-build", "release-main-version", "snapshot-release"

defaults:
  run:
    shell: bash
    working-directory: .   # after checkout this is is the repo root

# Note: the below does not test code under otel_output_parser

jobs:
  ci-run-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Build docker images
        run: |
          make build-docker-images

      - name: Run unit tests
        run: |
          # Note: We do pip install -e for composable-logs. This seems to be necessary
          # so we can import the package inside (remote) Ray tasks and notebooks
          # tasks. These are run as remote Python processes.

          cd docker
          make in-ci-docker/run-command \
              RUN_ENVIRONMENT="${{ env.RUN_ENVIRONMENT }}" \
              COMMAND="(cd composable_logs; pip install -e .; make test-pytest )"

      - name: Run mypy type checks
        run: |
          cd docker
          make in-ci-docker/run-command \
              COMMAND="(cd composable_logs; make test-mypy )" \

      - name: Check black formatting
        run: |
          cd docker
          make in-ci-docker/run-command \
              COMMAND="(cd composable_logs; make test-black )"

      - name: Determining unix epoch time stamp of commit (to version snapshot releases)
        run: |
          # For dev-snapshot releases, this is used in package version. However,
          # the variable is here set for all build targets.
          #
          # see https://git-scm.com/docs/git-show
          echo "LAST_COMMIT_UNIX_EPOCH=$( \
            git show ${GITHUB_SHA} --no-patch --format=%ct \
          )" >> $GITHUB_ENV

      - name: Build Python package for the composable-logs library
        run: |
          make in-ci-docker/build

        env:
          PYTHON_PACKAGE_RELEASE_TARGET: ${{ inputs.python-package-release-target }}

      - name: Save Python package wheel-file as a Github build artefact
        uses: actions/upload-artifact@v2
        with:
          name: composable-logs-wheel
          path: ${{ github.workspace }}/workspace/composable_logs/dist/
          if-no-files-found: error
          retention-days: 1
